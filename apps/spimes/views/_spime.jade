
div.row

  div.span4
    if spime.photo
      img(src="#{spime.photo.largeUrl}")
    else
      |Default Photo Here
    

    br
    br
    
    if locals.user_id == spime.owner._id

      p
        a.btn(align=left, href='/spimes/edit/#{spime.id}')
          | Edit Spime

      p
        form(action='/spimes/#{spime.id}', method='post', name="logout")
          input(type='hidden', name='_method', value='delete')
          button.btn(type='submit') Delete Spime
    
    
  div.span4
  
    table.table
      tr
        td
          Strong
            |Name
        td
          =spime.name
          
      tr
        td
          Strong
            |Description
        td
          =spime.description
          
      tr
        td
          strong
            |Owner
        td
          img.avatar(src="#{spime.owner.smallIconUrl}") 
          a(href="/account/#{spime.owner._id}") 
            if spime.owner.nickname
              |#{spime.owner.nickname}
            else
              |#{spime.owner.email}
          
      tr
        td
          strong
            |Privacy
        td
          =spime.privacy
          
      tr
        td
          strong
            |Manufacturing Date
        td
          if spime.manufacturing_date
            = moment(spime.manufacturing_date).format('YYYY-MM-DD')
          
      tr
        td
          strong
            |Functional Principles
        td
          = spime.functional_principles
          
      tr
        td
          strong
            |Regulations & Standards
        td
          = spime.regulations_and_standards
          
      tr
        td
          strong
            |Running Cost
        td
          = spime.running_cost
          
      tr
        td
          strong
            |Safety
        td
          = spime.safety
          
      tr
        td
          strong
            |Capacity
        td
          = spime.capacity
          
      tr
        td
          strong
            |Hygiene
        td
          = spime.hygiene
  
  div.span4
    
    table.table
      
      tr
        td
          strong
            |Service
        td
          = spime.service
          
      tr
        td
          strong
            |Decay and Recycling
        td
          = spime.decay_and_recycling

      tr
        td
          Strong
            |Uses and Limitations
        td
          =spime.uses_and_limitations
          
      tr
        td
          Strong
            |Patents and Rights
        td
          =spime.patents_rights
          
      tr
        td
          strong
            |Materials
        td
          =spime.materials
          
      tr
        td
          strong
            |Construction Method
        td
          =spime.construction_method
          
      tr
        td
          strong
            |Packaging
        td
          =spime.packaging
          
      tr
        td
          strong
            |Storage
        td
          =spime.storage
          
      tr
        td
          strong
            |Distribution
        td
          =spime.distribution
          
      tr
        td
          strong
            |Price
        td
          =spime.price
          
      tr
        td
          strong
            |Haptics
        td
          =spime.haptics

if sightings
  div.row
    div.span2
    div.span8
      h4 Sightings
      div.tabbable
        ul.nav.nav-tabs
          li.active
            a(href='#tab1', data-toggle='tab')
              |Maps of #{title} Sightings
          li
            a(href='#tab2', data-toggle='tab')
              |Lists of #{title} Sightings

        div.tab-content

          div.tab-pane.active(id='tab1')
            div(style="height: 500px; width: 800px;")
              div(style="height: 100%; width: 100%;", id='map-canvas')

          div.tab-pane(id='tab2')
            table.table.table-striped
              tr
                th Where?
                th Who?
                th When?
                th Latitude
                th Longitude
                th Map Link
              each sighting in sightings
                tr
                  td
                    =sighting.location_name
                  td
                    =sighting.checkin_person
                  td
                    =locals.moment(sighting.timestamp).calendar()
                  td
                    =sighting.latitude
                  td
                    =sighting.longitude
                  td
                    if sighting.latitude && sighting.longitude
                      a(href="http://maps.google.com/maps?q=loc:#{sighting.latitude},#{sighting.longitude}") Google Maps Link
      div.span2
    
if locals.user_id == spime.owner._id
  div.row
    div.span2
    div.span8
      h4 Private Data
      table.table
        tr
          td
            |Checkin URL
          td
            =spime.checkin_url
        tr
          td
            |Checkin QRCode
          td
            include _qrcode
    div.span2

|<script>
|var map;
|function initialize() {
|  if (!document.getElementById('map-canvas')) { return; }
|  var mapOptions = {
|    zoom: 10,
|    mapTypeId: google.maps.MapTypeId.ROADMAP
|  };
|  map = new google.maps.Map(document.getElementById('map-canvas'),
|      mapOptions);
|  var latlngbounds = new google.maps.LatLngBounds();
for sighting in sightings
  |lat = #{sighting.latitude}
  |lng = #{sighting.longitude}
  |latlngbounds.extend(new google.maps.LatLng(lat,lng));
  |marker = new google.maps.Marker({
  |  position: new google.maps.LatLng(lat, lng),
  |  map: map,
  |  title:"#{spime.name}",
  |});
  |contentString = "What? <a href=/spimes/#{spime._id}>#{spime.name}</a>";
  if spime.photo
    |contentString += "<br /><img src=#{spime.photo.compUrl}>";
  |contentString+= "<br />Where? #{sighting.location_name}";
  |contentString+= "<br />Who? #{sighting.checkin_person}";
  |contentString+= "<br />When?: #{locals.moment(sighting.timestamp).calendar()}";
  |listenMarker(marker, contentString);
|  map.setCenter(latlngbounds.getCenter());
|  map.findBounds(latlngbounds);
|}
|function listenMarker(marker, contentString) {
|  google.maps.event.addListener(marker, 'click', function() {
|    new google.maps.InfoWindow({ content: contentString }).open(map, marker);
|  });
|}
|function loadScript() {
|  var script = document.createElement('script');
|  script.type = 'text/javascript';
|  script.src = 'https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&' +
|      'callback=initialize';
|  document.body.appendChild(script);
|}
|window.onload = loadScript;
|</script>

|<script type='text/javascript'>
|$(document).ready(function () {
|  if ($(".tooltips").length) {
|    $(".tooltips").tooltip();
|  }
|});
|</script>
